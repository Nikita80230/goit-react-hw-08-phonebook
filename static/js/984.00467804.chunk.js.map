{"version":3,"file":"static/js/984.00467804.chunk.js","mappings":"4MACA,EAAiC,qCCAjC,EAA8B,iC,SCY9B,EAVoB,SAAC,GAAqB,IAAnBA,EAAkB,EAAlBA,YACrB,OACE,gBAAIC,UAAWC,EAAf,WACE,gBAAID,UAAU,cAAd,UAA4B,SAAOD,EAAYG,SAC/C,eAAGF,UAAU,eAAb,UAA4B,UAAQD,EAAYI,WAChD,mBAAQH,UAAU,eAAlB,SAAiC,aAGtC,ECXYI,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EAEtBC,EAAkB,SAAAF,GAAK,OAAIA,EAAMC,SAASE,SAAnB,ECDpC,EAA8B,kCCKjBC,EAAe,WAC1B,IAAMH,GAAWI,EAAAA,EAAAA,IAAYN,GAE7B,OACE,eAAIJ,UAAWC,EAAf,SACGK,EACCA,EAASK,KAAI,SAAAC,GACX,OAAO,SAAC,EAAD,CAA8Bb,YAAaa,GAAzBA,EAAQC,GAClC,KAED,wBAAI,4CAIX,ECnBD,EAA8B,oC,UCiC9B,EA7BuB,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,iBAAKf,UAAWC,EAAhB,WACE,wBAAI,iBACJ,kBAAMe,SAfW,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAcF,EAAEG,cAAcC,SAC9BC,EAAW,CACfpB,KAAMiB,EAAYjB,KAAKqB,MACvBpB,OAAQgB,EAAYhB,OAAOoB,OAE7BC,QAAQC,IAAIH,GACZR,GAASY,EAAAA,EAAAA,GAAgBJ,IACzBL,EAAEG,cAAcO,OACjB,EAIG,WACE,kBAAOC,QAAQ,OAAf,SAAsB,WACtB,kBAAOC,KAAK,OAAOhB,GAAG,OAAOX,KAAK,OAAO4B,UAAQ,KACjD,kBAAOF,QAAQ,SAAf,SAAwB,aACxB,kBAAOC,KAAK,MAAMhB,GAAG,SAASX,KAAK,SAAS4B,UAAQ,KACpD,mBAAQD,KAAK,SAAb,SAAsB,qBAI7B,E,oBC9BYE,EAAS,WAClB,OACI,SAAC,KAAD,CACIC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,0BACVC,aAAc,CAAC,EACfC,aAAa,0BACbC,WAAW,UACXC,MAAM,WAGjB,ECmBD,EAtBqB,WACnB,IAAM/B,GAAYE,EAAAA,EAAAA,IAAYH,GACxBiC,GAAa9B,EAAAA,EAAAA,IAAY+B,EAAAA,IAEzB3B,GAAWC,EAAAA,EAAAA,MAQjB,OANA2B,EAAAA,EAAAA,YAAU,WACHF,GAEL1B,GAAS6B,EAAAA,EAAAA,KACV,GAAE,CAAC7B,EAAU0B,KAGZ,iBAAKxC,UAAWC,EAAhB,WACE,SAAC,EAAD,IACCO,IAAa,SAACuB,EAAD,KACd,wBAAI,kBACJ,SAACtB,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","redux/contacts/contactsSelector.js","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/NewContactForm/NewContactForm.module.css?69b9","components/NewContactForm/NewContactForm.jsx","components/Loader/Loader.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactSection\":\"ContactsPage_contactSection__Vrnyk\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__Z4FuP\"};","import React from 'react';\nimport css from './ContactItem.module.css';\n\nconst ContactItem = ({ contactData }) => {\n  return (\n    <li className={css.contactItem}>\n      <h4 className=\"contactName\">Name: {contactData.name}</h4>\n      <p className=\"contactPhone\">Phone: {contactData.number}</p>\n      <button className=\"deleteButton\">Delete</button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectIsError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactsList_contactList__qIIH9\"};","import ContactItem from 'components/ContactItem/ContactItem';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelector';\nimport css from './ContactsList.module.css';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <ul className={css.contactList}>\n      {contacts ? (\n        contacts.map(contact => {\n          return <ContactItem key={contact.id} contactData={contact} />;\n        })\n      ) : (\n        <h3>There is no contacts in your phonebook</h3>\n      )}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"NewContactForm_contactForm__pKgob\"};","import React from 'react';\nimport css from './NewContactForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport { addContactThunk } from 'redux/contacts/contactsOperations';\n\nconst NewContactForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const formElement = e.currentTarget.elements;\n    const formData = {\n      name: formElement.name.value,\n      number: formElement.number.value,\n    };\n    console.log(formData);\n    dispatch(addContactThunk(formData));\n    e.currentTarget.reset();\n  };\n  return (\n    <div className={css.contactForm}>\n      <h3>Add Contact</h3>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" name=\"name\" required />\n        <label htmlFor=\"number\">Number:</label>\n        <input type=\"tel\" id=\"number\" name=\"number\" required />\n        <button type=\"submit\">Add Contact</button>\n      </form>\n    </div>\n  );\n};\n\nexport default NewContactForm;\n","import { MagnifyingGlass } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n        <MagnifyingGlass\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"MagnifyingGlass-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"MagnifyingGlass-wrapper\"\n            glassColor=\"#c0efff\"\n            color=\"#e15b64\"\n        />\n    );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactsPage.module.css';\n\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport NewContactForm from 'components/NewContactForm/NewContactForm';\n\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { getContactsThunk } from 'redux/contacts/contactsOperations';\nimport { selectIsLoading } from 'redux/contacts/contactsSelector';\nimport { Loader } from 'components/Loader/Loader';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n\n    dispatch(getContactsThunk());\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <div className={css.contactSection}>\n      <NewContactForm />\n      {isLoading && <Loader />}\n      <h2>Contact List</h2>\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["contactData","className","css","name","number","selectContacts","state","contacts","selectIsLoading","isLoading","ContactsList","useSelector","map","contact","id","dispatch","useDispatch","onSubmit","e","preventDefault","formElement","currentTarget","elements","formData","value","console","log","addContactThunk","reset","htmlFor","type","required","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","isLoggedIn","selectIsLoggedIn","useEffect","getContactsThunk"],"sourceRoot":""}